
On-demand Traffic light control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003c8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000041c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000044c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b46  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000072a  00000000  00000000  000010ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000699  00000000  00000000  000017d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000144  00000000  00000000  00001e74  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042d  00000000  00000000  00001fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000472  00000000  00000000  000023e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00002857  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 85 00 	call	0x10a	; 0x10a <main>
  64:	0c 94 e2 01 	jmp	0x3c4	; 0x3c4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <APP_init>:
 *  Author: fahds
 */ 
#include "application.h"
//#define NUMBER_OF_OVERFLOWS 2000
void APP_init(void){
	LED_init(PORT_A,0);
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	81 e4       	ldi	r24, 0x41	; 65
  70:	0e 94 79 00 	call	0xf2	; 0xf2 <LED_init>
	LED_init(PORT_A,1);
  74:	61 e0       	ldi	r22, 0x01	; 1
  76:	81 e4       	ldi	r24, 0x41	; 65
  78:	0e 94 79 00 	call	0xf2	; 0xf2 <LED_init>
	LED_init(PORT_A,2);
  7c:	62 e0       	ldi	r22, 0x02	; 2
  7e:	81 e4       	ldi	r24, 0x41	; 65
  80:	0e 94 79 00 	call	0xf2	; 0xf2 <LED_init>
	
	LED_init(PORT_B,0);
  84:	60 e0       	ldi	r22, 0x00	; 0
  86:	82 e4       	ldi	r24, 0x42	; 66
  88:	0e 94 79 00 	call	0xf2	; 0xf2 <LED_init>
	LED_init(PORT_B,1);
  8c:	61 e0       	ldi	r22, 0x01	; 1
  8e:	82 e4       	ldi	r24, 0x42	; 66
  90:	0e 94 79 00 	call	0xf2	; 0xf2 <LED_init>
	LED_init(PORT_B,2);
  94:	62 e0       	ldi	r22, 0x02	; 2
  96:	82 e4       	ldi	r24, 0x42	; 66
  98:	0e 94 79 00 	call	0xf2	; 0xf2 <LED_init>
	
	BUTTON_init(PORT_D,2);
  9c:	62 e0       	ldi	r22, 0x02	; 2
  9e:	84 e4       	ldi	r24, 0x44	; 68
  a0:	0e 94 72 00 	call	0xe4	; 0xe4 <BUTTON_init>
  a4:	08 95       	ret

000000a6 <APP_start>:
}
void APP_start(void){
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	1f 92       	push	r1
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
		//overflowCounter++;
	//}
	// Timer stop
	//TCCR0 = 0x00;
	uint8_t value;
	BUTTON_read(PORT_D,2,&value);
  b0:	ae 01       	movw	r20, r28
  b2:	4f 5f       	subi	r20, 0xFF	; 255
  b4:	5f 4f       	sbci	r21, 0xFF	; 255
  b6:	62 e0       	ldi	r22, 0x02	; 2
  b8:	84 e4       	ldi	r24, 0x44	; 68
  ba:	0e 94 76 00 	call	0xec	; 0xec <BUTTON_read>
	switch(value){
  be:	89 81       	ldd	r24, Y+1	; 0x01
  c0:	88 23       	and	r24, r24
  c2:	19 f0       	breq	.+6      	; 0xca <APP_start+0x24>
  c4:	81 30       	cpi	r24, 0x01	; 1
  c6:	31 f0       	breq	.+12     	; 0xd4 <APP_start+0x2e>
  c8:	09 c0       	rjmp	.+18     	; 0xdc <APP_start+0x36>
		case 0:
			LED_off(PORT_A,0);
  ca:	60 e0       	ldi	r22, 0x00	; 0
  cc:	81 e4       	ldi	r24, 0x41	; 65
  ce:	0e 94 81 00 	call	0x102	; 0x102 <LED_off>
			break;
  d2:	04 c0       	rjmp	.+8      	; 0xdc <APP_start+0x36>
		case 1:
			LED_on(PORT_A,0);
  d4:	60 e0       	ldi	r22, 0x00	; 0
  d6:	81 e4       	ldi	r24, 0x41	; 65
  d8:	0e 94 7d 00 	call	0xfa	; 0xfa <LED_on>
			break;
	}
	
  dc:	0f 90       	pop	r0
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <BUTTON_init>:
 */ 
#include "button.h"

//initialize
void BUTTON_init(uint8_t buttonPort,uint8_t buttonPin){
	DIO_init(buttonPort,buttonPin,IN);
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	0e 94 8a 00 	call	0x114	; 0x114 <DIO_init>
  ea:	08 95       	ret

000000ec <BUTTON_read>:
}

// button read
void BUTTON_read(uint8_t buttonPort,uint8_t buttonPin,uint8_t *value){
	DIO_read(buttonPort,buttonPin,value);
  ec:	0e 94 7e 01 	call	0x2fc	; 0x2fc <DIO_read>
  f0:	08 95       	ret

000000f2 <LED_init>:
 */ 
#include "led.h"


void LED_init(uint8_t ledPort,uint8_t ledPin){
	DIO_init(ledPort,ledPin,OUT);
  f2:	41 e0       	ldi	r20, 0x01	; 1
  f4:	0e 94 8a 00 	call	0x114	; 0x114 <DIO_init>
  f8:	08 95       	ret

000000fa <LED_on>:
}
void LED_on(uint8_t ledPort,uint8_t ledPin){
	DIO_write(ledPort,ledPin,HIGH);
  fa:	41 e0       	ldi	r20, 0x01	; 1
  fc:	0e 94 04 01 	call	0x208	; 0x208 <DIO_write>
 100:	08 95       	ret

00000102 <LED_off>:
}
void LED_off(uint8_t ledPort,uint8_t ledPin){
	DIO_write(ledPort,ledPin,LOW);
 102:	40 e0       	ldi	r20, 0x00	; 0
 104:	0e 94 04 01 	call	0x208	; 0x208 <DIO_write>
 108:	08 95       	ret

0000010a <main>:
#include "Application/application.h"


int main(void)
{
    APP_init();
 10a:	0e 94 36 00 	call	0x6c	; 0x6c <APP_init>
	
	while(1){
		APP_start();
 10e:	0e 94 53 00 	call	0xa6	; 0xa6 <APP_start>
 112:	fd cf       	rjmp	.-6      	; 0x10e <main+0x4>

00000114 <DIO_init>:
			//PORTC ^= (1<<pinNumber);
			TOGGLE_BIT(PORTC,pinNumber);
		break;
		case PORT_D:
			//PORTD ^= (1<<pinNumber);
			TOGGLE_BIT(PORTD,pinNumber);
 114:	82 34       	cpi	r24, 0x42	; 66
 116:	31 f1       	breq	.+76     	; 0x164 <DIO_init+0x50>
 118:	18 f4       	brcc	.+6      	; 0x120 <DIO_init+0xc>
 11a:	81 34       	cpi	r24, 0x41	; 65
 11c:	39 f0       	breq	.+14     	; 0x12c <DIO_init+0x18>
 11e:	08 95       	ret
 120:	83 34       	cpi	r24, 0x43	; 67
 122:	e1 f1       	breq	.+120    	; 0x19c <DIO_init+0x88>
 124:	84 34       	cpi	r24, 0x44	; 68
 126:	09 f4       	brne	.+2      	; 0x12a <DIO_init+0x16>
 128:	54 c0       	rjmp	.+168    	; 0x1d2 <DIO_init+0xbe>
 12a:	08 95       	ret
 12c:	41 11       	cpse	r20, r1
 12e:	0c c0       	rjmp	.+24     	; 0x148 <DIO_init+0x34>
 130:	2a b3       	in	r18, 0x1a	; 26
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_init+0x28>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_init+0x24>
 140:	80 95       	com	r24
 142:	82 23       	and	r24, r18
 144:	8a bb       	out	0x1a, r24	; 26
 146:	08 95       	ret
 148:	41 30       	cpi	r20, 0x01	; 1
 14a:	09 f0       	breq	.+2      	; 0x14e <DIO_init+0x3a>
 14c:	5c c0       	rjmp	.+184    	; 0x206 <DIO_init+0xf2>
 14e:	2a b3       	in	r18, 0x1a	; 26
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <DIO_init+0x46>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <DIO_init+0x42>
 15e:	82 2b       	or	r24, r18
 160:	8a bb       	out	0x1a, r24	; 26
 162:	08 95       	ret
 164:	41 11       	cpse	r20, r1
 166:	0c c0       	rjmp	.+24     	; 0x180 <DIO_init+0x6c>
 168:	27 b3       	in	r18, 0x17	; 23
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_init+0x60>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	6a 95       	dec	r22
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_init+0x5c>
 178:	80 95       	com	r24
 17a:	82 23       	and	r24, r18
 17c:	87 bb       	out	0x17, r24	; 23
 17e:	08 95       	ret
 180:	41 30       	cpi	r20, 0x01	; 1
 182:	09 f0       	breq	.+2      	; 0x186 <DIO_init+0x72>
 184:	40 c0       	rjmp	.+128    	; 0x206 <DIO_init+0xf2>
 186:	27 b3       	in	r18, 0x17	; 23
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	02 c0       	rjmp	.+4      	; 0x192 <DIO_init+0x7e>
 18e:	88 0f       	add	r24, r24
 190:	99 1f       	adc	r25, r25
 192:	6a 95       	dec	r22
 194:	e2 f7       	brpl	.-8      	; 0x18e <DIO_init+0x7a>
 196:	82 2b       	or	r24, r18
 198:	87 bb       	out	0x17, r24	; 23
 19a:	08 95       	ret
 19c:	41 11       	cpse	r20, r1
 19e:	0c c0       	rjmp	.+24     	; 0x1b8 <DIO_init+0xa4>
 1a0:	24 b3       	in	r18, 0x14	; 20
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_init+0x98>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	6a 95       	dec	r22
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_init+0x94>
 1b0:	80 95       	com	r24
 1b2:	82 23       	and	r24, r18
 1b4:	84 bb       	out	0x14, r24	; 20
 1b6:	08 95       	ret
 1b8:	41 30       	cpi	r20, 0x01	; 1
 1ba:	29 f5       	brne	.+74     	; 0x206 <DIO_init+0xf2>
 1bc:	24 b3       	in	r18, 0x14	; 20
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_init+0xb4>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_init+0xb0>
 1cc:	82 2b       	or	r24, r18
 1ce:	84 bb       	out	0x14, r24	; 20
 1d0:	08 95       	ret
 1d2:	41 11       	cpse	r20, r1
 1d4:	0c c0       	rjmp	.+24     	; 0x1ee <DIO_init+0xda>
 1d6:	21 b3       	in	r18, 0x11	; 17
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_init+0xce>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_init+0xca>
 1e6:	80 95       	com	r24
 1e8:	82 23       	and	r24, r18
 1ea:	81 bb       	out	0x11, r24	; 17
 1ec:	08 95       	ret
 1ee:	41 30       	cpi	r20, 0x01	; 1
 1f0:	51 f4       	brne	.+20     	; 0x206 <DIO_init+0xf2>
 1f2:	21 b3       	in	r18, 0x11	; 17
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_init+0xea>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	6a 95       	dec	r22
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_init+0xe6>
 202:	82 2b       	or	r24, r18
 204:	81 bb       	out	0x11, r24	; 17
 206:	08 95       	ret

00000208 <DIO_write>:
 208:	82 34       	cpi	r24, 0x42	; 66
 20a:	31 f1       	breq	.+76     	; 0x258 <DIO_write+0x50>
 20c:	18 f4       	brcc	.+6      	; 0x214 <DIO_write+0xc>
 20e:	81 34       	cpi	r24, 0x41	; 65
 210:	39 f0       	breq	.+14     	; 0x220 <DIO_write+0x18>
 212:	08 95       	ret
 214:	83 34       	cpi	r24, 0x43	; 67
 216:	e1 f1       	breq	.+120    	; 0x290 <DIO_write+0x88>
 218:	84 34       	cpi	r24, 0x44	; 68
 21a:	09 f4       	brne	.+2      	; 0x21e <DIO_write+0x16>
 21c:	54 c0       	rjmp	.+168    	; 0x2c6 <DIO_write+0xbe>
 21e:	08 95       	ret
 220:	41 11       	cpse	r20, r1
 222:	0c c0       	rjmp	.+24     	; 0x23c <DIO_write+0x34>
 224:	2b b3       	in	r18, 0x1b	; 27
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	02 c0       	rjmp	.+4      	; 0x230 <DIO_write+0x28>
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	6a 95       	dec	r22
 232:	e2 f7       	brpl	.-8      	; 0x22c <DIO_write+0x24>
 234:	80 95       	com	r24
 236:	82 23       	and	r24, r18
 238:	8b bb       	out	0x1b, r24	; 27
 23a:	08 95       	ret
 23c:	41 30       	cpi	r20, 0x01	; 1
 23e:	09 f0       	breq	.+2      	; 0x242 <DIO_write+0x3a>
 240:	5c c0       	rjmp	.+184    	; 0x2fa <DIO_write+0xf2>
 242:	2b b3       	in	r18, 0x1b	; 27
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_write+0x46>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_write+0x42>
 252:	82 2b       	or	r24, r18
 254:	8b bb       	out	0x1b, r24	; 27
 256:	08 95       	ret
 258:	41 11       	cpse	r20, r1
 25a:	0c c0       	rjmp	.+24     	; 0x274 <DIO_write+0x6c>
 25c:	28 b3       	in	r18, 0x18	; 24
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_write+0x60>
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	6a 95       	dec	r22
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_write+0x5c>
 26c:	80 95       	com	r24
 26e:	82 23       	and	r24, r18
 270:	88 bb       	out	0x18, r24	; 24
 272:	08 95       	ret
 274:	41 30       	cpi	r20, 0x01	; 1
 276:	09 f0       	breq	.+2      	; 0x27a <DIO_write+0x72>
 278:	40 c0       	rjmp	.+128    	; 0x2fa <DIO_write+0xf2>
 27a:	28 b3       	in	r18, 0x18	; 24
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	02 c0       	rjmp	.+4      	; 0x286 <DIO_write+0x7e>
 282:	88 0f       	add	r24, r24
 284:	99 1f       	adc	r25, r25
 286:	6a 95       	dec	r22
 288:	e2 f7       	brpl	.-8      	; 0x282 <DIO_write+0x7a>
 28a:	82 2b       	or	r24, r18
 28c:	88 bb       	out	0x18, r24	; 24
 28e:	08 95       	ret
 290:	41 11       	cpse	r20, r1
 292:	0c c0       	rjmp	.+24     	; 0x2ac <DIO_write+0xa4>
 294:	25 b3       	in	r18, 0x15	; 21
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <DIO_write+0x98>
 29c:	88 0f       	add	r24, r24
 29e:	99 1f       	adc	r25, r25
 2a0:	6a 95       	dec	r22
 2a2:	e2 f7       	brpl	.-8      	; 0x29c <DIO_write+0x94>
 2a4:	80 95       	com	r24
 2a6:	82 23       	and	r24, r18
 2a8:	85 bb       	out	0x15, r24	; 21
 2aa:	08 95       	ret
 2ac:	41 30       	cpi	r20, 0x01	; 1
 2ae:	29 f5       	brne	.+74     	; 0x2fa <DIO_write+0xf2>
 2b0:	25 b3       	in	r18, 0x15	; 21
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <DIO_write+0xb4>
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	6a 95       	dec	r22
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <DIO_write+0xb0>
 2c0:	82 2b       	or	r24, r18
 2c2:	85 bb       	out	0x15, r24	; 21
 2c4:	08 95       	ret
 2c6:	41 11       	cpse	r20, r1
 2c8:	0c c0       	rjmp	.+24     	; 0x2e2 <DIO_write+0xda>
 2ca:	22 b3       	in	r18, 0x12	; 18
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_write+0xce>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	6a 95       	dec	r22
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_write+0xca>
 2da:	80 95       	com	r24
 2dc:	82 23       	and	r24, r18
 2de:	82 bb       	out	0x12, r24	; 18
 2e0:	08 95       	ret
 2e2:	41 30       	cpi	r20, 0x01	; 1
 2e4:	51 f4       	brne	.+20     	; 0x2fa <DIO_write+0xf2>
 2e6:	22 b3       	in	r18, 0x12	; 18
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <DIO_write+0xea>
 2ee:	88 0f       	add	r24, r24
 2f0:	99 1f       	adc	r25, r25
 2f2:	6a 95       	dec	r22
 2f4:	e2 f7       	brpl	.-8      	; 0x2ee <DIO_write+0xe6>
 2f6:	82 2b       	or	r24, r18
 2f8:	82 bb       	out	0x12, r24	; 18
 2fa:	08 95       	ret

000002fc <DIO_read>:
		break;
	}
}
void DIO_read(uint8_t portNumber, uint8_t pinNumber, uint8_t* value)
{
	switch(portNumber){
 2fc:	82 34       	cpi	r24, 0x42	; 66
 2fe:	01 f1       	breq	.+64     	; 0x340 <DIO_read+0x44>
 300:	18 f4       	brcc	.+6      	; 0x308 <DIO_read+0xc>
 302:	81 34       	cpi	r24, 0x41	; 65
 304:	39 f0       	breq	.+14     	; 0x314 <DIO_read+0x18>
 306:	08 95       	ret
 308:	83 34       	cpi	r24, 0x43	; 67
 30a:	81 f1       	breq	.+96     	; 0x36c <DIO_read+0x70>
 30c:	84 34       	cpi	r24, 0x44	; 68
 30e:	09 f4       	brne	.+2      	; 0x312 <DIO_read+0x16>
 310:	43 c0       	rjmp	.+134    	; 0x398 <DIO_read+0x9c>
 312:	08 95       	ret
		case PORT_A:
			//*value = ((PINA&(1<<pinNumber))>>pinNumber);
			*value = READ_BIT(PINA,pinNumber);
 314:	79 b3       	in	r23, 0x19	; 25
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	9c 01       	movw	r18, r24
 31c:	06 2e       	mov	r0, r22
 31e:	02 c0       	rjmp	.+4      	; 0x324 <DIO_read+0x28>
 320:	22 0f       	add	r18, r18
 322:	33 1f       	adc	r19, r19
 324:	0a 94       	dec	r0
 326:	e2 f7       	brpl	.-8      	; 0x320 <DIO_read+0x24>
 328:	87 2f       	mov	r24, r23
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	82 23       	and	r24, r18
 32e:	93 23       	and	r25, r19
 330:	02 c0       	rjmp	.+4      	; 0x336 <DIO_read+0x3a>
 332:	95 95       	asr	r25
 334:	87 95       	ror	r24
 336:	6a 95       	dec	r22
 338:	e2 f7       	brpl	.-8      	; 0x332 <DIO_read+0x36>
 33a:	fa 01       	movw	r30, r20
 33c:	80 83       	st	Z, r24
		break;
 33e:	08 95       	ret
		case PORT_B:
			//*value = ((PINB&(1<<pinNumber))>>pinNumber);
			*value = READ_BIT(PINB,pinNumber);
 340:	76 b3       	in	r23, 0x16	; 22
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	9c 01       	movw	r18, r24
 348:	06 2e       	mov	r0, r22
 34a:	02 c0       	rjmp	.+4      	; 0x350 <DIO_read+0x54>
 34c:	22 0f       	add	r18, r18
 34e:	33 1f       	adc	r19, r19
 350:	0a 94       	dec	r0
 352:	e2 f7       	brpl	.-8      	; 0x34c <DIO_read+0x50>
 354:	87 2f       	mov	r24, r23
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	82 23       	and	r24, r18
 35a:	93 23       	and	r25, r19
 35c:	02 c0       	rjmp	.+4      	; 0x362 <DIO_read+0x66>
 35e:	95 95       	asr	r25
 360:	87 95       	ror	r24
 362:	6a 95       	dec	r22
 364:	e2 f7       	brpl	.-8      	; 0x35e <DIO_read+0x62>
 366:	fa 01       	movw	r30, r20
 368:	80 83       	st	Z, r24
		break;
 36a:	08 95       	ret
		case PORT_C:
			//*value = ((PINC&(1<<pinNumber))>>pinNumber);
			*value = READ_BIT(PINC,pinNumber);
 36c:	73 b3       	in	r23, 0x13	; 19
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	9c 01       	movw	r18, r24
 374:	06 2e       	mov	r0, r22
 376:	02 c0       	rjmp	.+4      	; 0x37c <DIO_read+0x80>
 378:	22 0f       	add	r18, r18
 37a:	33 1f       	adc	r19, r19
 37c:	0a 94       	dec	r0
 37e:	e2 f7       	brpl	.-8      	; 0x378 <DIO_read+0x7c>
 380:	87 2f       	mov	r24, r23
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	82 23       	and	r24, r18
 386:	93 23       	and	r25, r19
 388:	02 c0       	rjmp	.+4      	; 0x38e <DIO_read+0x92>
 38a:	95 95       	asr	r25
 38c:	87 95       	ror	r24
 38e:	6a 95       	dec	r22
 390:	e2 f7       	brpl	.-8      	; 0x38a <DIO_read+0x8e>
 392:	fa 01       	movw	r30, r20
 394:	80 83       	st	Z, r24
		break;
 396:	08 95       	ret
		case PORT_D:
			//*value = ((PIND&(1<<pinNumber))>>pinNumber);
			*value = READ_BIT(PIND,pinNumber);
 398:	70 b3       	in	r23, 0x10	; 16
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	9c 01       	movw	r18, r24
 3a0:	06 2e       	mov	r0, r22
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <DIO_read+0xac>
 3a4:	22 0f       	add	r18, r18
 3a6:	33 1f       	adc	r19, r19
 3a8:	0a 94       	dec	r0
 3aa:	e2 f7       	brpl	.-8      	; 0x3a4 <DIO_read+0xa8>
 3ac:	87 2f       	mov	r24, r23
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	82 23       	and	r24, r18
 3b2:	93 23       	and	r25, r19
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <DIO_read+0xbe>
 3b6:	95 95       	asr	r25
 3b8:	87 95       	ror	r24
 3ba:	6a 95       	dec	r22
 3bc:	e2 f7       	brpl	.-8      	; 0x3b6 <DIO_read+0xba>
 3be:	fa 01       	movw	r30, r20
 3c0:	80 83       	st	Z, r24
 3c2:	08 95       	ret

000003c4 <_exit>:
 3c4:	f8 94       	cli

000003c6 <__stop_program>:
 3c6:	ff cf       	rjmp	.-2      	; 0x3c6 <__stop_program>
